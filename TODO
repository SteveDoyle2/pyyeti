0. Add generic assemble array routine ? (a, b, …, c, ‘’, A, B, …C, ‘’, …)
    - base this off of scipy.linalg.block_diag ... or is there
      something there already?
1. Update duf explanation in cla.apply_uf
~2. Get rid of ytools.diagmat ... use scipy.linalg.block_diag
~3. Rearrange code: op2, op4, n2p, nastran overlap ... ?
   - primarly rdnas2cam ... seems like this should be in n2p
   - i think all of these should probably just be in "nastran" ...
     or under it: nastran.op4.read()
     - but all load when "from pyyeti import nastran"
~4. Convert uset to dataframe i think
5. Convert ext, mx, mn in DR_Results to dataframe
6. rddmig needs profiling / updating for very large DMIGs
7. add wtdmig
12. op4: add some c?
15. cla.py:
    DR_Results() … should this be able to init? I think so:
                   DR_Results(drdefs, mission, event)
                   … similar to DR.prepare_results(mission, event)
                   … and/or, what about a DR_Def.prepare_results()
    ß actually, replace DR_Event.prepare_results() I think!!
                   Get rid of Info in DR_Event? Probably can’t because
                   of the uf_reds override.

    Naming convention should be more consistent:
      drdefs vs. Info vs. drminfo
         - Could they all be DR_Def instances??

         - Info can be a DR_Def instance ... but each drminfo is just
           a SimpleNamespace: a "value" in the DR_Def (or Info) dict

    - think about getting rid of DR_Event altogether ... just update
      a new DR_Def with all drdefs/dufs/ulvs's ... will this work?

    Be sure to update doctest for add_maxmin

    ~ DR_Def could be derived from dict or OrderedDict …
    “drdefs[cat]” seems better than “drdefs.dr_def[cat]”

    ~ Hmm … what about "class DR_Event(dict)"?
                   Nah, this one seems okay as is

    Update the code to better handle NaNs.
      - got a couple different methods going right now ... ??


~    1 resp_plots pdf filename -- this is the `onepdf` option i believe
    2 write complete test_cla.py
    3 magpct needs to be able to chop off small numbers

    4 when flagging, but no flags, format is shortened by one char for that column
    5 maybe add option to use only one figure ... that should be default ?

    6 y-axis label written far away in srs3/net_ifatm_0rb_eqsine_all.pdf plot ... why?
~    7 include documentation link for "load" and "save"
    8 Save eqsine to xlsx file

~16. op2 updates:
  - some functions should be "public", like _rdop2nt()
19. Add windowends to srs ?
~20. Change output of fdepsd to DataFrames


21. In cb or cla:
    - In mk_net_drms, add use_g_units
    - make routine that returns string for adding data recovery categories for mk_net_drms output:
        """
        @cla.DR_Def.addcat
        def _():
            name = 'net_ifatm'
            ...
        ...
        """
        o   Could accept s/c name for description strings
        o   Or, make this just a function call? … that actually runs it?
            §  Would need defaults and maybe other inputs
            §  Could have it call mk_net_drms internally

~22.
~    -        Incorporate upqsetpv & update help & add tests
~    -        Update upasetpv help
~    -        Formulvs help says it returns 1 … should say 1.0
~    -        Rdop2n2c dnids: fix wording here (“pair” would be better I think):
~    These ids are internally generated and should match with ‘dnids’.

23. ? Add option to change time step during simulation
    o   Save parameters in dictionary for each time step?
    o   Or, are the params cheap to recompute?
    Hmm ... would have to decide how to save results (even time steps?)

~24. Add ability to write more matrices in wt_extseout (like mug1).
~     - added in version v0.92.3

~25. DR_Event.add should have ability to multiply a new factor on top of
~    current setting … right now, all it can do is replace
~     - added in version v0.92.3

~ 26. The DR_Results.solve_psd routine does ode.SolveUnc everytime ????
~  changed input to class instance "fs" in v0.92.3

~27. Implement a Newmark-Beta ode solver
~  - add tests
~  - think about static ic
~  - bathe reference ?

~28. Add frf_data_recovery and add tests for it
~    - added method in v0.92.3b

~29. Enhance DR_Event.add "method" option (for uf_reds update) to accept
~    function
~    - implemented in v0.92.3b

~30. add rf modes handling to FreqDirect
~    - add tests

31. frf_apply_duf – see if needed and consider renaming (psd_apply_duf?)

32. cla:
    - Maybe should have capability to create null (zeros) category
      (with srs’s) … or just make sure zero case is accounted for in
      combination … hmm.

    - Form_extreme
       - Skip some events? (Like static and random, but include total)

    ~- Reldisp dtm: nodepairs -> node_pairs

    ~- bug: cbcheck -> cbcoordchk : bug if bset is last and we are not
      reordering (bref is relative to b+q size, but kbb is b size)

    ~- Nastran.mknast Stoponfatal should be bool

    XX - Change size(m, 1) to m.shape[1] (not just in cla.py)

~33. bulk: rddtipch example has bad example (imports! & mkdofpv is
    probably better)

34. cb: Teach cbtf to handle 0 frequency case like solveunc.fsolve
    does.

~35. windowends in srsmap is bad reference

36. cbreorder could take tuple of matrices ...

37. cbcoordchk should be silence-able
